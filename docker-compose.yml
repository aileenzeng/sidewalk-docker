version: '3'

services: 
    # This service is in charge of running Project Sidewalk.
    # It uses sbt to compile and run the project.
    website:
        build: ./website
        volumes:
            # TODO: figure out how to create a volume mount for the website... it isn't working :|
            # This is especially important when we are developing with Sidewalk using Docker. We don't want to be rebuilding
            # the docker container every time we make a change.
            # - ./website/SidewalkWebpage:/root/app

            # anonymous volume to cache project dependencies
            # https://stackoverflow.com/questions/3142856/how-to-configure-ivy-cache-directory-per-user-or-system-wide

            # Note from Docker documentation: https://docs.docker.com/compose/compose-file/#volumes-for-services-swarms-and-stack-files
            # In the absence of having named volumes with specified sources, 
            # Docker creates an anonymous volume for each task backing a service. 
            # Anonymous volumes do not persist after the associated containers are removed.
            - sbt-cache:/root/.ivy2
            - node-modules:/root/app/node_modules
            - grunt:/usr/lib/node_modules

        # This is called in Sidewalk's application.conf file. This gives the location where the 
        # database can come from
        environment:
            DOCKER_DB: db:5432

        depends_on:
            - db

        # Runs on localhost:9000.
        ports: 
            - "9000:9000"

        # may be unnecessary
        # I think docker containers still 
        networks:
            - back-tier

        tty: true

    # This service is in charge of managing the database for Project Sidewalk.
    # The database that is being used is Postgres with PostGIS extensions.
    db:
        # Run the Dockerfile for the database from the resources folder.
        # The Dockerfile for the database gets postgres/postgis and copies the files over
        # to the docker-entrypiont-initdb.d folder.
        build: ./resources

        # Add dump to the docker-entrypoint-initdb.d file. Ideally, docker should automatically
        # build the database from this container. This currently doesn't work.

        # Adding a volume mount should make the database persist.
        # This solution hasn't worked so far :/
        # https://stackoverflow.com/questions/41637505/how-to-persist-data-in-a-dockerized-postgres-database-using-volumes
        volumes:
            - ./resources/sidewalk.sql:/docker-entrypoint-initdb.d/sidewalk.sql
            # - ./resources/sidewalk.sql:/var/lib/postgresql/data/sidewalk.sql

        # Sets environment variables (per original Instructions)?
        environment:
            POSTGRES_USER: "sidewalk"
            POSTGRES_PASSWORD: "sidewalk"
            POSTGRES_DB: "sidewalk"
        
        # Sets the forwarding/guest port. The default port for postgres is 5432.
        ports:
            - "5432:5432"

        # may be unnecessary    
        networks:
            - back-tier

        # TODO: investigate adding commands (so we don't need to deal w/ the extra set of instructions)

volumes:
    sbt-cache:
    node-modules:
    grunt:

networks:
    back-tier:
